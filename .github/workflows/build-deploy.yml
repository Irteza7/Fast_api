name: Buld and Deploy Code

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

jobs:
    not_BJ:
        environment: 
            name: testing
        env: 
            DATABASE_HOSTNAME: ${{vars.DATABASE_HOSTNAME}}
            DATABASE_PORT: ${{vars.DATABASE_PORT}}
            DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
            DATABASE_NAME: ${{vars.DATABASE_NAME}}
            DATABASE_USERNAME: ${{vars.DATABASE_USERNAME}}
            SECRET_KEY: ${{secrets.SECRET_KEY}}
            ALGORITHM: ${{secrets.ALGORITHM}}
            ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
            DB_URL: ${{secrets.DB_URL}}

        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
                    POSTGRES_DB: ${{vars.DATABASE_NAME}}_test
                ports: 
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5            
        runs-on: ubuntu-latest
        steps:
            - name: Pulling git repo from github
              uses: actions/checkout@v3 
            - name: Say Hi to Irteza
              run: echo "Hello Irteza" 
            - name: Install python v 3.10
              uses: actions/setup-python@v4
              with:
                python-version: '3.10' 
            - name: Upgrade pip
              run: python -m pip install --upgrade pip
            - name: Install all dependencies
              run: pip install -r requirements.txt
            - name: Run pytests
              run: |
                pip install pytest
                pytest
            
            # - name: Set up Docker Buildx
            #   uses: docker/setup-buildx-action@v2
            
            # - name: Login to Docker Hub
            #   uses: docker/login-action@v2
            #   with:
            #       username: ${{ secrets.DOCKERHUB_USERNAME }}
            #       password: ${{ secrets.DOCKERHUB_TOKEN }}
            # - name: Build and push
            #   uses: docker/build-push-action@v4
            #   with:
            #     context: .
            #     file: ./Dockerfile
            #     push: true
            #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/fast_api:latest
            #     cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/fast_api:latest
            #     cache-to: type=inline
                
        

